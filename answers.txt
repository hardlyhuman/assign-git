1. What is a gitignore file and what should it include for a Java project? 
Ans: A .gitignore file is a text file in a Git repository that specifies 
which files or directories should not be tracked by Git. The purpose of a .gitignore file is 
to ensure that sensitive information or temporary files are not accidentally committed 
and pushed to the remote repository. 
For a Java project, the .gitignore file might include the following items:
.class files
.log files
.idea/ directory
target/ directory
*.iml files

2. What does fast-forward in git mean?
Ans: Fast-forward in Git refers to a type of merge that occurs when the current branch 
can be updated to match the state of the branch being merged, without creating a 
new merge commit. Fast-forward merges happen when the current branch has not 
diverged from the branch being merged.

3. Why should you have different branches? 
Ans: Different branches in Git are used to isolate changes made to the codebase. 
This allows teams to work on different features or bug fixes simultaneously 
without interfering with each other's work. Different branches also provide a 
convenient way to revert changes, test new features, and maintain multiple 
versions of the codebase.

4. In a project how many remote Git repositories do you usually have? 
Ans: The number of remote Git repositories in a project can vary depending on 
the project size, complexity, and team size. Generally, a project will have 
one remote repository, which is the main repository where all changes 
are merged and where the code is hosted. Some organizations may have 
multiple remote repositories for different teams or for different environments 
(such as development, testing, and production), but it is not a common practice.